name: Build and Push to Amazon ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  WEBAPP_REPO: 851725282833.dkr.ecr.us-east-1.amazonaws.com/clo835-webapp
  MYSQL_REPO: 851725282833.dkr.ecr.us-east-1.amazonaws.com/clo835-mysql

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3Ô∏è‚É£ Verify AWS identity
      - name: Verify AWS identity
        run: aws sts get-caller-identity

      # 4Ô∏è‚É£ Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 5Ô∏è‚É£ Build and push Web App image
      - name: Build & Push WebApp Image
        run: |
          echo "üöÄ Building and pushing WebApp image..."
          docker build -t webapp:latest -f Dockerfile .
          docker tag webapp:latest ${{ env.WEBAPP_REPO }}:latest
          docker push ${{ env.WEBAPP_REPO }}:latest
          echo "‚úÖ WebApp image pushed to ECR: ${{ env.WEBAPP_REPO }}:latest"

      # 6Ô∏è‚É£ Build and push MySQL image
      - name: Build & Push MySQL Image
        run: |
          echo "üóÑÔ∏è Building and pushing MySQL image..."
          docker build -t mysql-custom:latest -f Dockerfile_mysql .
          docker tag mysql-custom:latest ${{ env.MYSQL_REPO }}:latest
          docker push ${{ env.MYSQL_REPO }}:latest
          echo "‚úÖ MySQL image pushed to ECR: ${{ env.MYSQL_REPO }}:latest"
